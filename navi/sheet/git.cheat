% git

# Stash the not staged changes. [-k|--keep-index]
git stash --keep-index

# Stash the staged changes. [-S|--staged]
git stash --staged

# Rebase into current origin branch
git rebase origin/$(git rev-parse --abbrev-ref HEAD)

# Reset the index and working tree into current origin branch
git reset --hard origin/$(git rev-parse --abbrev-ref HEAD)

# Follow the history of the file beyond renames (works only for a single file). Also apply to `tig`
git log --follow <file_name>

# Show raw information by `git show`
git show --format=raw <commit_sha>

# Diff with current origin branch
git diff HEAD origin/$(git rev-parse --abbrev-ref HEAD)

# Range-Diff with current origin branch
git range-diff master..HEAD origin/master..origin/$(git rev-parse --abbrev-ref HEAD)

# Do not track <file_name> anymore
git update-index --assume-unchanged <file_name>

$ file_name: fd --type file --hidden

# Push all tags
git push <remote> --tags

$ remote: git remote | fzf

# Check trailing whitespace on working directory and stage
(git diff --cached --check || git diff --check) && git diff --check

# Get short commit
git rev-parse --short <commit>

# Pretty-print the contents of object
git cat-file -p <object>

# Delete current origin remote branch
git push --delete origin $(git rev-parse --abbrev-ref HEAD)
